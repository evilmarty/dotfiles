#!/bin/bash

main() {
  local last_revision=$(git rev-parse HEAD)

  while git-is-dirty; do
    git add --patch
    if [ $? -ne 0 ]; then
      local last_exit_status=$?
      break
    fi
    commit=$(select_commit ${last_revision}...master)
    if [ $? -ne 0 ]; then
      return $?
    fi
    git commit --fixup $commit "$@" || break
  done

  local current_revision=$(git rev-parse HEAD)
  if [ "$last_revision" == "$current_revision" ]; then
    return $last_exit_status
  fi

  confirm_squash && confirm_force_push || confirm_push || true
}

confirm_squash() {
  confirm "Squash branch? " && git rebase --autosquash -i master
}

confirm_push() {
  confirm "Push branch? " && git push
}

confirm_force_push() {
  confirm "Force push branch? " && git push --force
}

confirm() {
  read -p "$1" choice
  case "$choice" in
    y|Y|yes|t|T|true|1 )
      return 0;;
    * )
      return 1;;
  esac
}

select_commit() {
  git log --format='%Cblue%h%Creset %s' "$@" | fzf --header='Select commit to fix up' | awk '{ print $1 }'
}

git-branch-guard --fail && main "$@"
